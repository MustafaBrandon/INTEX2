@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<h2>Route Results:</h2>

<h6>UCAPS Danger score: @ViewBag.score</h6>
<h6>@ViewBag.routesUsed routes were observed for this result.</h6>


<div class="row">
    <div class="col">
        <iframe width="450"
                height="450"
                frameborder="0" style="border:0"
                referrerpolicy="no-referrer-when-downgrade"
                src="@ViewBag.mapUrl"
                loading="lazy"
                allowfullscreen>
        </iframe>
    </div>


    @*<img src="@ViewBag.markerUrl" />*@

<div class="col">
    <div class="row">
        <div class="col">
            <h6>Heatmap of accidents in the immediate area</h6>
            <div id="map" style="height:450px;width:250px;"></div>

        </div>
        <div class="col">
            <h6>Recomended intersection path (can fail to form)</h6>
            <div id="map1" style="height:450px;width:250px;"></div>

        </div>
    </div>
</div>


</div>
@if (ViewBag.score != 0)
{
    <h6>The most dangerous intersection on this route:</h6>
    <iframe width="450"
            height="250"
            frameborder="0" style="border:0"
            referrerpolicy="no-referrer-when-downgrade"
            src="@ViewBag.viewUrl"
            loading="lazy"
            allowfullscreen>
    </iframe>
}
            else
            {
    <h6>The turns on this route are fairly safe! Safe Travels!</h6>
            }



<input type="hidden" id="data" value="@ViewBag.accidents" />
<input type="hidden" id="south" value="@ViewBag.scenter" />
<input type="hidden" id="west" value="@ViewBag.wcenter" />
<input type="hidden" id="sl" value="@ViewBag.sl" />
<input type="hidden" id="sv" value="@ViewBag.sv" />
<input type="hidden" id="el" value="@ViewBag.el" />
<input type="hidden" id="ev" value="@ViewBag.ev" />
<input type="hidden" id="pathing" value="@ViewBag.pathing" />

<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbMfrJkOsAaEwi7fHIYoq8vTRhdvpDE3A&libraries=visualization&callback=initMap">
</script>
<script>

function initMap() {


            var data = document.getElementById("data").value;
            var south = document.getElementById("south").value;
            var west = document.getElementById("west").value;
            var sl = document.getElementById("sl").value;
            var sv = document.getElementById("sv").value;
            var el = document.getElementById("el").value;
            var ev = document.getElementById("ev").value;
            var pathing = document.getElementById("pathing").value;
            //console.log(data);
            const mainArray = data.split(",");
            //console.log(mainArray);
            let heatmapData = [];
            for (let i = 0; i < mainArray.length; i += 2) {
                heatmapData.push(new google.maps.LatLng(mainArray[i], mainArray[i + 1]));
            }
            const pathArray = pathing.split(",");
            console.log(pathArray);


            var provo = new google.maps.LatLng(west, south);
    const start = new google.maps.LatLng(sv, sl);
    const end = new google.maps.LatLng(ev, el);

            map = new google.maps.Map(document.getElementById('map'), {
                center: provo,
                zoom: 14,
                mapTypeId: 'satellite'
            });

            map1 = new google.maps.Map(document.getElementById('map1'), {
                center: provo,
                zoom: 14,
                mapTypeId: 'satellite'
            });

            var heatmap = new google.maps.visualization.HeatmapLayer({
                data: heatmapData
            });
            heatmap.setMap(map);

            //new google.maps.Marker({
            //    position: start,
            //    map:map1,
            //    title: "Start"

            //});

            //new google.maps.Marker({
            //    position: end,
            //    map:map1,
            //    title: "End"
            //});

            const flightPlanCoordinates = [

            ];

                  for (var i = 0; i < pathArray.length; i += 2){
                      flightPlanCoordinates.push(new google.maps.LatLng(pathArray[i], pathArray[i + 1]));
                }
            const flightPath = new google.maps.Polyline({
                path: flightPlanCoordinates,
                geodesic: true,
                strokeColor: "#FF0000",
                strokeOpacity: 1.0,
                strokeWeight: 2,
            });

            flightPath.setMap(map1);


        }
</script>
